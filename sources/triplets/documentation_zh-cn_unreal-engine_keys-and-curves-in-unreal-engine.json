{
  "filename": "documentation_zh-cn_unreal-engine_keys-and-curves-in-unreal-engine",
  "sourceFile": "C:\\Users\\yarnb\\unreal-engine-knowledge-graph-mcp\\sources\\docs\\documentation_zh-cn_unreal-engine_keys-and-curves-in-unreal-engine.md",
  "triples": [
    {
      "subject": "UCurveBase",
      "predicate": "包含",
      "object": "关键点",
      "context": "UCurveBase是所有曲线类型的基类，它定义了可以包含任意数量关键点的轨道，这些关键点用于定义时间或值",
      "direction": "unidirectional",
      "confidence": 0.9
    },
    {
      "subject": "UCurveFloat",
      "predicate": "继承",
      "object": "UCurveBase",
      "context": "UCurveFloat是UCurveBase的子类，专门用于处理浮点数值的曲线",
      "direction": "unidirectional",
      "confidence": 0.9
    },
    {
      "subject": "时间轴组件",
      "predicate": "使用",
      "object": "UCurveFloat",
      "context": "时间轴组件可以实例化UCurveFloat来创建基于时间的浮点值变化效果",
      "direction": "unidirectional",
      "confidence": 0.9
    },
    {
      "subject": "关键帧",
      "predicate": "控制",
      "object": "曲线形状",
      "context": "关键帧通过定义时间和值来影响曲线的形状，关键帧之间的插值决定了曲线的具体形态",
      "direction": "unidirectional",
      "confidence": 0.9
    },
    {
      "subject": "关键帧插值",
      "predicate": "影响",
      "object": "曲线平滑度",
      "context": "不同的插值类型（如线性、立方体自动等）会显著影响关键帧之间曲线的平滑度和过渡方式",
      "direction": "unidirectional",
      "confidence": 0.9
    },
    {
      "subject": "时间轴编辑器",
      "predicate": "用于",
      "object": "编辑关键帧",
      "context": "时间轴编辑器提供了可视化界面来添加、删除和修改关键帧，是操作曲线的主要工具",
      "direction": "unidirectional",
      "confidence": 0.9
    },
    {
      "subject": "Actor",
      "predicate": "包含",
      "object": "时间轴组件",
      "context": "在示例中，Actor类包含了时间轴组件作为其功能的一部分，展示了如何在游戏对象中使用时间轴",
      "direction": "unidirectional",
      "confidence": 0.9
    },
    {
      "subject": "内容浏览器",
      "predicate": "用于",
      "object": "创建曲线资源",
      "context": "内容浏览器是创建和管理曲线资源（如UCurveFloat）的主要界面",
      "direction": "unidirectional",
      "confidence": 0.9
    },
    {
      "subject": "蓝图",
      "predicate": "基于",
      "object": "ExampleTimelineComponent",
      "context": "示例展示了如何基于C++的ExampleTimelineComponent创建蓝图类，体现了代码与蓝图的协作",
      "direction": "unidirectional",
      "confidence": 0.9
    },
    {
      "subject": "关键帧",
      "predicate": "支持",
      "object": "多种插值类型",
      "context": "关键帧支持自动、用户、断裂、线性和常量等多种插值类型，为曲线编辑提供了灵活性",
      "direction": "unidirectional",
      "confidence": 0.9
    }
  ],
  "timestamp": "2025-06-15T19:38:12.396Z",
  "warnings": [],
  "metadata": {
    "fileSize": 9684,
    "contentLength": 7837,
    "processingTimeMs": 39849
  }
}