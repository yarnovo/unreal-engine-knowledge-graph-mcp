{
  "filename": "documentation_zh-cn_unreal-engine_mutable-quickstart-guide-for-unreal-engine",
  "sourceFile": "C:\\Users\\yarnb\\unreal-engine-knowledge-graph-mcp\\sources\\docs\\documentation_zh-cn_unreal-engine_mutable-quickstart-guide-for-unreal-engine.md",
  "triples": [
    {
      "subject": "Mutable",
      "predicate": "用于",
      "object": "生成角色",
      "context": "Mutable是虚幻引擎中用于动态生成角色和游戏对象的工具，帮助学习者理解其核心功能",
      "direction": "unidirectional",
      "confidence": 0.9
    },
    {
      "subject": "玩家自定义",
      "predicate": "是",
      "object": "Mutable常见使用场景",
      "context": "玩家自定义是Mutable最常见的应用场景，帮助学习者优先掌握这一核心用法",
      "direction": "unidirectional",
      "confidence": 0.9
    },
    {
      "subject": "Gameplay效果",
      "predicate": "是",
      "object": "Mutable使用场景",
      "context": "Gameplay代码驱动的参数修改是Mutable的另一种重要应用方式",
      "direction": "unidirectional",
      "confidence": 0.9
    },
    {
      "subject": "预定义实例",
      "predicate": "是",
      "object": "Mutable使用场景",
      "context": "美术师预定义不可变实例是Mutable的第三种典型应用场景",
      "direction": "unidirectional",
      "confidence": 0.9
    },
    {
      "subject": "烘焙后的实例",
      "predicate": "是",
      "object": "Mutable使用场景",
      "context": "将Mutable实例烘焙为标准资产是性能优化的替代方案",
      "direction": "unidirectional",
      "confidence": 0.9
    },
    {
      "subject": "可自定义对象资产",
      "predicate": "包含",
      "object": "参数",
      "context": "理解可自定义对象资产包含可调整参数是掌握Mutable的基础",
      "direction": "unidirectional",
      "confidence": 0.9
    },
    {
      "subject": "对象状态",
      "predicate": "用于",
      "object": "参数修改场景",
      "context": "对象状态是管理不同参数配置的重要概念，对理解Mutable工作流程很关键",
      "direction": "unidirectional",
      "confidence": 0.9
    },
    {
      "subject": "数据驱动的UI",
      "predicate": "可扩展",
      "object": "玩家自定义",
      "context": "数据驱动的UI可以增强玩家自定义系统的可扩展性，是进阶学习内容",
      "direction": "unidirectional",
      "confidence": 0.8
    },
    {
      "subject": "烘焙后的实例",
      "predicate": "替代",
      "object": "Mutable运行时生成",
      "context": "烘焙实例是避免运行时性能消耗的替代方案，但会牺牲动态性",
      "direction": "unidirectional",
      "confidence": 0.9
    },
    {
      "subject": "可自定义对象实例",
      "predicate": "基于",
      "object": "可自定义对象资产",
      "context": "实例是从资产创建的，理解这个关系对掌握工作流程很重要",
      "direction": "unidirectional",
      "confidence": 0.9
    },
    {
      "subject": "玩家自定义",
      "predicate": "对比",
      "object": "Gameplay效果",
      "context": "比较两种动态修改方式的异同有助于理解适用场景",
      "direction": "bidirectional",
      "confidence": 0.8
    },
    {
      "subject": "预定义实例",
      "predicate": "对比",
      "object": "烘焙后的实例",
      "context": "比较两种静态使用方式的性能和质量差异",
      "direction": "bidirectional",
      "confidence": 0.8
    },
    {
      "subject": "Mutable",
      "predicate": "生成",
      "object": "骨骼网格体",
      "context": "理解Mutable最终生成的资产类型对资源管理很重要",
      "direction": "unidirectional",
      "confidence": 0.9
    },
    {
      "subject": "Mutable",
      "predicate": "生成",
      "object": "材质",
      "context": "材质是Mutable生成的重要资产类型之一",
      "direction": "unidirectional",
      "confidence": 0.9
    },
    {
      "subject": "烘焙后的实例",
      "predicate": "导致",
      "object": "数据重复",
      "context": "理解烘焙方案的缺点对技术选型很重要",
      "direction": "unidirectional",
      "confidence": 0.9
    }
  ],
  "timestamp": "2025-06-15T20:02:53.086Z",
  "warnings": [],
  "metadata": {
    "fileSize": 6638,
    "contentLength": 3793,
    "processingTimeMs": 43601
  }
}