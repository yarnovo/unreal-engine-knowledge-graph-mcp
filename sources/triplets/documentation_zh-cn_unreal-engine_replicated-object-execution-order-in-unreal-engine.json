{
  "filename": "documentation_zh-cn_unreal-engine_replicated-object-execution-order-in-unreal-engine",
  "sourceFile": "C:\\Users\\yarnb\\unreal-engine-knowledge-graph-mcp\\sources\\docs\\documentation_zh-cn_unreal-engine_replicated-object-execution-order-in-unreal-engine.md",
  "triples": [
    {
      "subject": "虚幻引擎网络复制",
      "predicate": "采用",
      "object": "可靠和不可靠通信方法",
      "context": "理解网络复制的基础通信机制是学习网络同步的前提",
      "direction": "unidirectional",
      "confidence": 0.9
    },
    {
      "subject": "可靠通信",
      "predicate": "区别于",
      "object": "不可靠通信",
      "context": "区分两种通信方式的特性是设计网络同步策略的关键",
      "direction": "bidirectional",
      "confidence": 0.95
    },
    {
      "subject": "Actor属性复制",
      "predicate": "属于",
      "object": "不可靠通信",
      "context": "了解属性复制的不可靠特性有助于正确处理网络数据同步",
      "direction": "unidirectional",
      "confidence": 0.9
    },
    {
      "subject": "RPC",
      "predicate": "分为",
      "object": "可靠RPC和不可靠RPC",
      "context": "区分RPC类型是理解执行顺序保证的基础",
      "direction": "unidirectional",
      "confidence": 0.9
    },
    {
      "subject": "OnRep回调",
      "predicate": "没有",
      "object": "确定执行顺序",
      "context": "理解这个限制可以避免在多个RepNotify变量间建立错误依赖",
      "direction": "unidirectional",
      "confidence": 0.9
    },
    {
      "subject": "跨Actor RPC",
      "predicate": "不保证",
      "object": "执行顺序",
      "context": "这个特性影响多Actor间网络交互的设计方式",
      "direction": "unidirectional",
      "confidence": 0.95
    },
    {
      "subject": "同一Actor可靠RPC",
      "predicate": "保证",
      "object": "顺序执行",
      "context": "这个保证是构建可靠网络交互的基础",
      "direction": "unidirectional",
      "confidence": 0.95
    },
    {
      "subject": "Actor和子对象RPC",
      "predicate": "保持",
      "object": "执行顺序",
      "context": "理解这个特性对设计复杂对象网络交互很重要",
      "direction": "unidirectional",
      "confidence": 0.9
    },
    {
      "subject": "不可靠RPC",
      "predicate": "可能",
      "object": "被丢弃",
      "context": "这个特性影响网络容错设计",
      "direction": "unidirectional",
      "confidence": 0.9
    },
    {
      "subject": "组播RPC",
      "predicate": "分为",
      "object": "可靠组播和不可靠组播",
      "context": "区分组播类型对理解执行顺序很重要",
      "direction": "unidirectional",
      "confidence": 0.9
    },
    {
      "subject": "可靠组播",
      "predicate": "保持",
      "object": "与其他可靠RPC的顺序",
      "context": "这个特性影响广播消息的设计",
      "direction": "unidirectional",
      "confidence": 0.9
    },
    {
      "subject": "不可靠组播",
      "predicate": "不保持",
      "object": "执行顺序",
      "context": "理解这个限制可以避免网络交互中的错误假设",
      "direction": "unidirectional",
      "confidence": 0.9
    },
    {
      "subject": "ERemoteFunctionSendPolicy",
      "predicate": "影响",
      "object": "RPC执行顺序",
      "context": "了解发送策略可以更精细地控制网络行为",
      "direction": "unidirectional",
      "confidence": 0.9
    },
    {
      "subject": "RPC",
      "predicate": "优先于",
      "object": "属性更新执行",
      "context": "这个执行顺序规则影响网络数据处理的逻辑设计",
      "direction": "unidirectional",
      "confidence": 0.95
    },
    {
      "subject": "不可靠组播RPC",
      "predicate": "在",
      "object": "属性更新后执行",
      "context": "这个特殊规则影响网络消息处理流程",
      "direction": "unidirectional",
      "confidence": 0.9
    },
    {
      "subject": "网络模拟",
      "predicate": "用于",
      "object": "测试不可靠RPC",
      "context": "这个实践对验证网络容错性很重要",
      "direction": "unidirectional",
      "confidence": 0.9
    },
    {
      "subject": "结构体",
      "predicate": "可用于",
      "object": "保证变量复制顺序",
      "context": "这个技巧可以解决多个RepNotify变量的顺序问题",
      "direction": "unidirectional",
      "confidence": 0.9
    },
    {
      "subject": "PostRepNotifies",
      "predicate": "用于",
      "object": "处理多个属性更新",
      "context": "了解这个函数可以帮助实现复杂的属性同步逻辑",
      "direction": "unidirectional",
      "confidence": 0.9
    }
  ],
  "timestamp": "2025-06-15T20:37:15.750Z",
  "warnings": [
    {
      "type": "large_file",
      "message": "文档内容较长，可能增加API调用成本 (9567 字符)",
      "timestamp": "2025-06-15T20:36:27.536Z"
    }
  ],
  "metadata": {
    "fileSize": 13823,
    "contentLength": 9567,
    "processingTimeMs": 48224
  }
}