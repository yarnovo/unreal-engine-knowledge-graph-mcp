{
  "filename": "documentation_zh-cn_unreal-engine_code-a-firstperson-adventure-game-in-unreal-engine",
  "sourceFile": "C:\\Users\\yarnb\\unreal-engine-knowledge-graph-mcp\\sources\\docs\\documentation_zh-cn_unreal-engine_code-a-firstperson-adventure-game-in-unreal-engine.md",
  "triples": [
    {
      "subject": "C++",
      "predicate": "支持",
      "object": "蓝图",
      "context": "C++和蓝图可以配合使用，C++类可以扩展为蓝图，让设计者能够轻松调整变量",
      "direction": "bidirectional",
      "confidence": 0.9
    },
    {
      "subject": "蓝图",
      "predicate": "继承",
      "object": "C++类",
      "context": "蓝图会充当C++类的子类，继承该类的所有功能",
      "direction": "unidirectional",
      "confidence": 0.9
    },
    {
      "subject": "C++",
      "predicate": "优于",
      "object": "蓝图",
      "context": "在大型项目中，C++更简洁、更易于读取、执行速度更快，并且可以访问虚幻引擎的所有功能",
      "direction": "unidirectional",
      "confidence": 0.8
    },
    {
      "subject": "蓝图",
      "predicate": "适用于",
      "object": "初学者",
      "context": "蓝图是引擎的可视化编码工具，对初学者非常友好，易于探索，并且可以快速编辑",
      "direction": "unidirectional",
      "confidence": 0.9
    },
    {
      "subject": "虚幻引擎",
      "predicate": "包含",
      "object": "蓝图编辑器",
      "context": "使用虚幻引擎的蓝图编辑器编辑蓝图，并最终在内容浏览器中得到蓝图类型的资产",
      "direction": "unidirectional",
      "confidence": 0.9
    },
    {
      "subject": "C++",
      "predicate": "用于",
      "object": "创建自定义玩家角色",
      "context": "在本教程中，你将使用C++和虚幻编辑器建立一个新的虚幻引擎代码项目，同时编译一个自定义玩家角色",
      "direction": "unidirectional",
      "confidence": 0.9
    },
    {
      "subject": "Visual Studio",
      "predicate": "用于",
      "object": "虚幻引擎开发",
      "context": "需要为虚幻引擎设置Visual Studio开发环境",
      "direction": "unidirectional",
      "confidence": 0.8
    },
    {
      "subject": "第一人称角色",
      "predicate": "包含",
      "object": "摄像机组件",
      "context": "学习如何使用C++为第一人称角色附加网格体和摄像机组件",
      "direction": "unidirectional",
      "confidence": 0.9
    },
    {
      "subject": "物品管理",
      "predicate": "使用",
      "object": "数据资产",
      "context": "学习使用物品数据结构体、数据资产和数据表来定义物品，并存储和组织物品数据以实现可伸缩性",
      "direction": "unidirectional",
      "confidence": 0.9
    },
    {
      "subject": "拾取物系统",
      "predicate": "实现",
      "object": "物品重生",
      "context": "了解如何使用C++创建自定义拾取物并将其在关卡中初始化，实现重生功能",
      "direction": "unidirectional",
      "confidence": 0.9
    },
    {
      "subject": "角色装备系统",
      "predicate": "包含",
      "object": "可装备物品",
      "context": "学习使用C++创建自定义可装备物品并将其附加到角色",
      "direction": "unidirectional",
      "confidence": 0.9
    },
    {
      "subject": "游戏机制",
      "predicate": "包含",
      "object": "投射物系统",
      "context": "学习使用C++实现投射物并在游戏过程中生成它们",
      "direction": "unidirectional",
      "confidence": 0.9
    }
  ],
  "timestamp": "2025-06-15T18:27:30.288Z",
  "warnings": [],
  "metadata": {
    "fileSize": 5631,
    "contentLength": 4201,
    "processingTimeMs": 44916
  }
}