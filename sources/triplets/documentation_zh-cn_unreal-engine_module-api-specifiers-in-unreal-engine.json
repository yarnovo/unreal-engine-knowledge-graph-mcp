{
  "filename": "documentation_zh-cn_unreal-engine_module-api-specifiers-in-unreal-engine",
  "sourceFile": "C:\\Users\\yarnb\\unreal-engine-knowledge-graph-mcp\\sources\\docs\\documentation_zh-cn_unreal-engine_module-api-specifiers-in-unreal-engine.md",
  "triples": [
    {
      "subject": "模块API说明符",
      "predicate": "标记",
      "object": "DLL文件中的函数/类/数据",
      "context": "帮助学习者理解模块API说明符的核心作用是标记DLL中的可公开访问元素",
      "direction": "unidirectional",
      "confidence": 0.9
    },
    {
      "subject": "模块化编译模式",
      "predicate": "对立于",
      "object": "单片编译模式",
      "context": "理解两种编译模式的区别是掌握模块化开发的基础",
      "direction": "bidirectional",
      "confidence": 0.9
    },
    {
      "subject": "UnrealBuildTool",
      "predicate": "控制",
      "object": "编译模式选择",
      "context": "UBT在编译流程中的核心作用，影响模块化开发方式",
      "direction": "unidirectional",
      "confidence": 0.9
    },
    {
      "subject": "API宏",
      "predicate": "对应",
      "object": "__declspec(dllexport/dllimport)",
      "context": "理解底层实现机制有助于掌握跨模块调用的原理",
      "direction": "bidirectional",
      "confidence": 0.9
    },
    {
      "subject": "Core模块",
      "predicate": "被依赖",
      "object": "大多数UE模块",
      "context": "Core模块的基础性地位，是模块依赖关系的典型案例",
      "direction": "unidirectional",
      "confidence": 0.9
    },
    {
      "subject": "动态加载模块",
      "predicate": "区别于",
      "object": "静态导入模块",
      "context": "理解两种模块加载方式的差异对架构设计很重要",
      "direction": "bidirectional",
      "confidence": 0.9
    },
    {
      "subject": "动态加载模块",
      "predicate": "支持",
      "object": "运行时重新加载",
      "context": "动态模块的核心优势，影响开发工作流设计",
      "direction": "unidirectional",
      "confidence": 0.9
    },
    {
      "subject": "API宏",
      "predicate": "主要用于",
      "object": "旧代码兼容",
      "context": "了解技术演进方向，新代码推荐使用接口层",
      "direction": "unidirectional",
      "confidence": 0.8
    },
    {
      "subject": "接口层",
      "predicate": "替代",
      "object": "API宏方式",
      "context": "现代模块间通信的最佳实践演进",
      "direction": "unidirectional",
      "confidence": 0.8
    },
    {
      "subject": "模块化编译",
      "predicate": "需要",
      "object": "API说明符",
      "context": "理解模块化编译的前提条件和技术要求",
      "direction": "unidirectional",
      "confidence": 0.9
    },
    {
      "subject": "单片编译模式",
      "predicate": "忽略",
      "object": "API说明符",
      "context": "理解不同编译模式下API说明符的行为差异",
      "direction": "unidirectional",
      "confidence": 0.9
    }
  ],
  "timestamp": "2025-06-15T19:58:25.179Z",
  "warnings": [],
  "metadata": {
    "fileSize": 2375,
    "contentLength": 1261,
    "processingTimeMs": 33678
  }
}