{
  "filename": "documentation_zh-cn_unreal-engine_programming-with-cplusplus-in-unreal-engine",
  "sourceFile": "C:\\Users\\yarnb\\unreal-engine-knowledge-graph-mcp\\sources\\docs\\documentation_zh-cn_unreal-engine_programming-with-cplusplus-in-unreal-engine.md",
  "triples": [
    {
      "subject": "虚幻引擎",
      "predicate": "支持",
      "object": "C++编程",
      "context": "虚幻引擎为C++程序员提供了健壮的框架，帮助实现版本",
      "direction": "bidirectional",
      "confidence": 0.9
    },
    {
      "subject": "C++编程",
      "predicate": "用于",
      "object": "创建Gameplay类",
      "context": "在C++中创建新的Gameplay类，编译后反映在虚幻编辑器中",
      "direction": "unidirectional",
      "confidence": 0.9
    },
    {
      "subject": "Gameplay类",
      "predicate": "基于",
      "object": "标准C++语法",
      "context": "在虚幻引擎中创建类与创建标准C++类、函数和变量相似",
      "direction": "unidirectional",
      "confidence": 0.9
    },
    {
      "subject": "虚幻反射系统",
      "predicate": "提供",
      "object": "编辑器功能",
      "context": "用元数据属性说明符的宏封装类，提供编辑器功能",
      "direction": "unidirectional",
      "confidence": 0.9
    },
    {
      "subject": "虚幻引擎",
      "predicate": "包含",
      "object": "容器",
      "context": "虚幻引擎中的容器提供关于类和数据结构的集合信息",
      "direction": "unidirectional",
      "confidence": 0.9
    },
    {
      "subject": "Gameplay架构",
      "predicate": "构建",
      "object": "项目",
      "context": "使用Gameplay Architecture在虚幻引擎中构建项目",
      "direction": "unidirectional",
      "confidence": 0.9
    },
    {
      "subject": "Gameplay框架",
      "predicate": "由",
      "object": "Object和Actor",
      "context": "Gameplay框架提供了一个由Object和Actor构成的结构",
      "direction": "unidirectional",
      "confidence": 0.9
    },
    {
      "subject": "委托",
      "predicate": "用于",
      "object": "调用成员函数",
      "context": "委托能够一种通用的、类型安全的方式调用C++对象上的成员函数",
      "direction": "unidirectional",
      "confidence": 0.9
    },
    {
      "subject": "虚幻编辑器",
      "predicate": "反映",
      "object": "C++代码更改",
      "context": "在C++中创建新的Gameplay类，编译后所有的改变都将反映在虚幻编辑器中",
      "direction": "unidirectional",
      "confidence": 0.9
    },
    {
      "subject": "元数据属性说明符",
      "predicate": "封装",
      "object": "类",
      "context": "用元数据属性说明符的宏封装类，提供编辑器功能",
      "direction": "unidirectional",
      "confidence": 0.9
    },
    {
      "subject": "虚幻引擎",
      "predicate": "遵循",
      "object": "Epic C++编码标准",
      "context": "在虚幻引擎中创建类与创建标准C++类、函数和变量相似，这些都是用标准C++语法定义的",
      "direction": "unidirectional",
      "confidence": 0.8
    },
    {
      "subject": "Gameplay类",
      "predicate": "包含",
      "object": "模板变量和函数",
      "context": "这些类包含模板变量和函数，可以在创建和设计互动体验时使用",
      "direction": "unidirectional",
      "confidence": 0.9
    },
    {
      "subject": "委托",
      "predicate": "绑定",
      "object": "成员函数",
      "context": "可以动态地将一个委托绑定到一个任意对象的成员函数上",
      "direction": "unidirectional",
      "confidence": 0.9
    }
  ],
  "timestamp": "2025-06-15T20:29:15.395Z",
  "warnings": [],
  "metadata": {
    "fileSize": 3947,
    "contentLength": 2767,
    "processingTimeMs": 37772
  }
}