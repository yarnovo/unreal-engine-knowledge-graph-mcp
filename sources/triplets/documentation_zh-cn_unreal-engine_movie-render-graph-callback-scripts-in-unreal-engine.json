{
  "filename": "documentation_zh-cn_unreal-engine_movie-render-graph-callback-scripts-in-unreal-engine",
  "sourceFile": "C:\\Users\\yarnb\\unreal-engine-knowledge-graph-mcp\\sources\\docs\\documentation_zh-cn_unreal-engine_movie-render-graph-callback-scripts-in-unreal-engine.md",
  "triples": [
    {
      "subject": "影片渲染图表",
      "predicate": "包含",
      "object": "回调系统",
      "context": "影片渲染图表通过回调系统添加前期/后期逻辑，帮助学习者理解渲染流程中的扩展点",
      "direction": "unidirectional",
      "confidence": 0.9
    },
    {
      "subject": "Execute Script Node",
      "predicate": "替代",
      "object": "项目设置中的回调执行器",
      "context": "新版渲染图表引入Execute Script Node，使回调创建更直观，替代了原先在项目设置中配置的方式",
      "direction": "unidirectional",
      "confidence": 0.9
    },
    {
      "subject": "MovieGraphScriptBase",
      "predicate": "继承",
      "object": "UObject",
      "context": "回调类需要继承自MovieGraphScriptBase，这是理解回调实现的基础",
      "direction": "unidirectional",
      "confidence": 0.9
    },
    {
      "subject": "@unreal.uclass()",
      "predicate": "标记",
      "object": "回调类",
      "context": "使用装饰器标记类使其能被UObject系统识别，是Python与虚幻引擎交互的关键知识",
      "direction": "unidirectional",
      "confidence": 0.9
    },
    {
      "subject": "on_job_start",
      "predicate": "属于",
      "object": "作业级回调",
      "context": "该回调在作业启动时触发，帮助学习者区分作业级与镜头级回调的触发时机",
      "direction": "unidirectional",
      "confidence": 0.9
    },
    {
      "subject": "on_job_finished",
      "predicate": "访问",
      "object": "渲染输出数据",
      "context": "通过该回调可以获取渲染生成的图层和文件数据，展示结果处理的典型方式",
      "direction": "unidirectional",
      "confidence": 0.9
    },
    {
      "subject": "逐镜头回调",
      "predicate": "依赖",
      "object": "Flush Disk Writes Per Shot",
      "context": "启用逐镜头回调需要配置磁盘写入策略，揭示性能与功能的权衡关系",
      "direction": "bidirectional",
      "confidence": 0.8
    },
    {
      "subject": "init_unreal.py",
      "predicate": "注册",
      "object": "永久回调类",
      "context": "通过特定Python文件持久化回调类，展示引擎启动时脚本的执行机制",
      "direction": "unidirectional",
      "confidence": 0.9
    },
    {
      "subject": "执行器回调",
      "predicate": "扩展",
      "object": "图表脚本回调",
      "context": "执行器层面的回调与图表脚本回调形成互补，完整覆盖渲染流程的事件处理",
      "direction": "bidirectional",
      "confidence": 0.8
    },
    {
      "subject": "MovieGraphScriptNodeExample.py",
      "predicate": "实现",
      "object": "标准回调模板",
      "context": "示例文件提供了完整的回调实现参考，是学习最佳实践的重要资源",
      "direction": "unidirectional",
      "confidence": 0.9
    },
    {
      "subject": "影片渲染队列",
      "predicate": "使用",
      "object": "影片渲染图表",
      "context": "渲染图表是渲染队列的核心配置组件，理解二者的关系有助于掌握渲染管线",
      "direction": "unidirectional",
      "confidence": 0.8
    },
    {
      "subject": "Sequencer",
      "predicate": "生成",
      "object": "渲染作业",
      "context": "Sequencer是创建渲染作业的源头，建立内容创作与渲染流程的关联",
      "direction": "unidirectional",
      "confidence": 0.7
    }
  ],
  "timestamp": "2025-06-15T20:01:23.182Z",
  "warnings": [
    {
      "type": "large_file",
      "message": "文档内容较长，可能增加API调用成本 (8150 字符)",
      "timestamp": "2025-06-15T20:00:38.365Z"
    }
  ],
  "metadata": {
    "fileSize": 11090,
    "contentLength": 8150,
    "processingTimeMs": 44830
  }
}