{
  "filename": "documentation_zh-cn_unreal-engine_dynamic-binding-in-sequencer",
  "sourceFile": "C:\\Users\\yarnb\\unreal-engine-knowledge-graph-mcp\\sources\\docs\\documentation_zh-cn_unreal-engine_dynamic-binding-in-sequencer.md",
  "triples": [
    {
      "subject": "动态绑定",
      "predicate": "用于",
      "object": "Gameplay事件",
      "context": "动态绑定可以在Gameplay事件期间将不同对象制作成动画，帮助学习者理解如何将游戏逻辑与动画序列结合",
      "direction": "unidirectional",
      "confidence": 0.9
    },
    {
      "subject": "动态绑定",
      "predicate": "用于",
      "object": "UI动画",
      "context": "动态绑定可以在UI动画期间将不同对象制作成动画，帮助学习者理解UI交互与动画的关联",
      "direction": "unidirectional",
      "confidence": 0.9
    },
    {
      "subject": "动态绑定",
      "predicate": "支持",
      "object": "蓝图逻辑",
      "context": "动态绑定提供自定义蓝图逻辑来选择或生成对象，帮助学习者理解如何通过蓝图扩展Sequencer功能",
      "direction": "unidirectional",
      "confidence": 0.9
    },
    {
      "subject": "动态绑定",
      "predicate": "支持",
      "object": "快速绑定",
      "context": "动态绑定提供快速绑定选项来简化常见解析逻辑，帮助学习者快速实现基础功能",
      "direction": "unidirectional",
      "confidence": 0.9
    },
    {
      "subject": "动态绑定",
      "predicate": "影响",
      "object": "轨迹",
      "context": "动态绑定的轨迹可以绑定到新对象并保持效果，帮助学习者理解动画数据的继承机制",
      "direction": "unidirectional",
      "confidence": 0.9
    },
    {
      "subject": "动态绑定",
      "predicate": "影响",
      "object": "属性",
      "context": "动态绑定的属性可以绑定到新对象并保持效果，帮助学习者理解属性数据的继承机制",
      "direction": "unidirectional",
      "confidence": 0.9
    },
    {
      "subject": "动态绑定",
      "predicate": "基于",
      "object": "Sequencer",
      "context": "动态绑定是Sequencer的功能扩展，帮助学习者理解核心模块与扩展功能的关系",
      "direction": "unidirectional",
      "confidence": 0.9
    },
    {
      "subject": "动态绑定",
      "predicate": "实现",
      "object": "关卡序列导演蓝图",
      "context": "动态绑定逻辑在关卡序列导演蓝图中实现，帮助学习者定位功能实现位置",
      "direction": "unidirectional",
      "confidence": 0.9
    },
    {
      "subject": "动态绑定",
      "predicate": "实现",
      "object": "UMG蓝图",
      "context": "UMG的动态绑定逻辑在UMG蓝图中实现，帮助学习者区分不同场景的实现方式",
      "direction": "unidirectional",
      "confidence": 0.9
    },
    {
      "subject": "动态绑定",
      "predicate": "包含",
      "object": "创建新端点",
      "context": "创建新端点是动态绑定的核心操作之一，帮助学习者掌握功能实现路径",
      "direction": "unidirectional",
      "confidence": 0.9
    },
    {
      "subject": "动态绑定",
      "predicate": "包含",
      "object": "快速绑定",
      "context": "快速绑定是动态绑定的简化操作模式，帮助学习者理解功能的不同使用层级",
      "direction": "unidirectional",
      "confidence": 0.9
    },
    {
      "subject": "动态绑定",
      "predicate": "包含",
      "object": "在编辑器中调用",
      "context": "在编辑器中调用是动态绑定的调试功能，帮助学习者理解开发调试方法",
      "direction": "unidirectional",
      "confidence": 0.9
    },
    {
      "subject": "创建新端点",
      "predicate": "生成",
      "object": "Binding Node",
      "context": "创建新端点会生成Binding Node蓝图节点，帮助学习者理解功能的技术实现",
      "direction": "unidirectional",
      "confidence": 0.9
    },
    {
      "subject": "创建新端点",
      "predicate": "生成",
      "object": "Return Node",
      "context": "创建新端点会生成Return Node蓝图节点，帮助学习者理解绑定的返回机制",
      "direction": "unidirectional",
      "confidence": 0.9
    },
    {
      "subject": "Return Node",
      "predicate": "控制",
      "object": "返回值对象",
      "context": "Return Node控制返回值对象的类型和行为，帮助学习者掌握绑定返回值的配置方法",
      "direction": "unidirectional",
      "confidence": 0.9
    },
    {
      "subject": "快速绑定",
      "predicate": "支持",
      "object": "解析到玩家Pawn",
      "context": "快速绑定可以直接解析到玩家Pawn，帮助学习者快速实现玩家角色绑定",
      "direction": "unidirectional",
      "confidence": 0.9
    },
    {
      "subject": "动态绑定",
      "predicate": "应用于",
      "object": "UMG",
      "context": "动态绑定可以应用于UMG控件，帮助学习者理解UI动画与游戏动画的统一管理",
      "direction": "unidirectional",
      "confidence": 0.9
    },
    {
      "subject": "动态绑定",
      "predicate": "依赖",
      "object": "Sequencer界面知识",
      "context": "使用动态绑定需要先了解Sequencer界面，帮助学习者建立知识依赖关系",
      "direction": "unidirectional",
      "confidence": 0.8
    },
    {
      "subject": "动态绑定",
      "predicate": "依赖",
      "object": "轨迹创建知识",
      "context": "使用动态绑定需要先了解轨迹创建，帮助学习者建立知识依赖关系",
      "direction": "unidirectional",
      "confidence": 0.8
    },
    {
      "subject": "动态绑定",
      "predicate": "依赖",
      "object": "可持有对象知识",
      "context": "使用动态绑定需要先了解可持有对象概念，帮助学习者建立知识依赖关系",
      "direction": "unidirectional",
      "confidence": 0.8
    },
    {
      "subject": "动态绑定",
      "predicate": "依赖",
      "object": "蓝图知识",
      "context": "使用动态绑定需要先掌握蓝图基础知识，帮助学习者建立知识依赖关系",
      "direction": "unidirectional",
      "confidence": 0.8
    },
    {
      "subject": "动态绑定",
      "predicate": "替代",
      "object": "静态绑定",
      "context": "动态绑定可以替代静态绑定实现运行时对象切换，帮助学习者理解不同绑定方式的适用场景",
      "direction": "unidirectional",
      "confidence": 0.7
    },
    {
      "subject": "动态绑定演练",
      "predicate": "演示",
      "object": "动态绑定流程",
      "context": "动态绑定演练完整演示了从创建到测试的完整流程，帮助学习者掌握实际操作步骤",
      "direction": "unidirectional",
      "confidence": 0.9
    }
  ],
  "timestamp": "2025-06-15T18:54:49.527Z",
  "warnings": [
    {
      "type": "large_file",
      "message": "文档内容较长，可能增加API调用成本 (11643 字符)",
      "timestamp": "2025-06-15T18:53:31.293Z"
    }
  ],
  "metadata": {
    "fileSize": 17669,
    "contentLength": 11643,
    "processingTimeMs": 78244
  }
}