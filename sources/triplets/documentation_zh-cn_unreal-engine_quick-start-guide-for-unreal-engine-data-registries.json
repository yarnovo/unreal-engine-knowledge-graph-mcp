{
  "filename": "documentation_zh-cn_unreal-engine_quick-start-guide-for-unreal-engine-data-registries",
  "sourceFile": "C:\\Users\\yarnb\\unreal-engine-knowledge-graph-mcp\\sources\\docs\\documentation_zh-cn_unreal-engine_quick-start-guide-for-unreal-engine-data-registries.md",
  "triples": [
    {
      "subject": "数据注册表",
      "predicate": "属于",
      "object": "Gameplay分类",
      "context": "数据注册表插件位于Gameplay分类下，帮助学习者理解其功能定位",
      "direction": "unidirectional",
      "confidence": 0.9
    },
    {
      "subject": "数据注册表",
      "predicate": "依赖",
      "object": "数据注册表插件",
      "context": "使用数据注册表功能前必须启用对应插件，这是基础依赖关系",
      "direction": "unidirectional",
      "confidence": 1
    },
    {
      "subject": "数据注册表配置",
      "predicate": "位于",
      "object": "项目设置",
      "context": "数据注册表的全局配置入口在项目设置的Game部分",
      "direction": "unidirectional",
      "confidence": 0.9
    },
    {
      "subject": "要扫描的目录",
      "predicate": "用于",
      "object": "定位数据注册表资产",
      "context": "该目录设置决定了系统查找数据注册表资产的位置",
      "direction": "unidirectional",
      "confidence": 0.9
    },
    {
      "subject": "数据注册表资产",
      "predicate": "包含",
      "object": "项结构体",
      "context": "创建数据注册表时需要指定其包含的数据结构类型",
      "direction": "unidirectional",
      "confidence": 0.9
    },
    {
      "subject": "数据注册表",
      "predicate": "支持",
      "object": "游戏标签标识",
      "context": "可通过Gameplay Tag来标识注册表中的资产，实现与其他系统的集成",
      "direction": "unidirectional",
      "confidence": 0.8
    },
    {
      "subject": "数据源",
      "predicate": "分为",
      "object": "简单源/元数据源",
      "context": "理解两种数据源类型的区别对正确配置数据注册表至关重要",
      "direction": "bidirectional",
      "confidence": 0.8
    },
    {
      "subject": "DataTable源",
      "predicate": "是",
      "object": "简单源类型",
      "context": "明确具体源类型的分类有助于选择合适的数据接入方式",
      "direction": "unidirectional",
      "confidence": 0.9
    },
    {
      "subject": "缓存规则",
      "predicate": "控制",
      "object": "数据访问性能",
      "context": "缓存配置直接影响运行时数据检索效率，是重要优化点",
      "direction": "unidirectional",
      "confidence": 0.7
    },
    {
      "subject": "C++集成",
      "predicate": "需要",
      "object": "添加DataRegistry模块依赖",
      "context": "代码中使用数据注册表功能需要显式声明模块依赖关系",
      "direction": "unidirectional",
      "confidence": 1
    },
    {
      "subject": "注册表预览",
      "predicate": "用于",
      "object": "验证数据加载",
      "context": "该功能帮助开发者确认数据注册表的实际加载内容是否符合预期",
      "direction": "unidirectional",
      "confidence": 0.9
    },
    {
      "subject": "数据注册表",
      "predicate": "支持",
      "object": "运行时数据生成",
      "context": "通过元数据源实现动态数据加载是高级用法的重要特性",
      "direction": "unidirectional",
      "confidence": 0.8
    }
  ],
  "timestamp": "2025-06-15T20:32:01.308Z",
  "warnings": [],
  "metadata": {
    "fileSize": 9284,
    "contentLength": 5816,
    "processingTimeMs": 45387
  }
}