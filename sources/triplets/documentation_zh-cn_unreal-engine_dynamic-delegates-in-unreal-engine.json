{
  "filename": "documentation_zh-cn_unreal-engine_dynamic-delegates-in-unreal-engine",
  "sourceFile": "C:\\Users\\yarnb\\unreal-engine-knowledge-graph-mcp\\sources\\docs\\documentation_zh-cn_unreal-engine_dynamic-delegates-in-unreal-engine.md",
  "triples": [
    {
      "subject": "动态委托",
      "predicate": "继承自",
      "object": "标准委托",
      "context": "动态委托的声明方式与标准委托相同，但使用动态委托专属的宏变体，表明动态委托是基于标准委托的扩展",
      "direction": "unidirectional",
      "confidence": 0.9
    },
    {
      "subject": "动态委托",
      "predicate": "包含",
      "object": "动态组播委托",
      "context": "动态委托包含动态组播委托，后者是前者的多播版本，用于同时绑定多个函数",
      "direction": "unidirectional",
      "confidence": 0.9
    },
    {
      "subject": "动态委托",
      "predicate": "支持",
      "object": "序列化",
      "context": "动态委托可序列化，这是其与标准委托的主要区别之一",
      "direction": "unidirectional",
      "confidence": 0.9
    },
    {
      "subject": "动态委托",
      "predicate": "支持",
      "object": "按命名查找",
      "context": "动态委托的函数可按命名查找，这是其与标准委托的主要区别之一",
      "direction": "unidirectional",
      "confidence": 0.9
    },
    {
      "subject": "动态委托",
      "predicate": "性能低于",
      "object": "标准委托",
      "context": "动态委托的执行速度比常规委托慢，这是其与标准委托的主要区别之一",
      "direction": "unidirectional",
      "confidence": 0.9
    },
    {
      "subject": "动态委托",
      "predicate": "使用",
      "object": "DECLARE_DYNAMIC_DELEGATE宏",
      "context": "动态委托使用DECLARE_DYNAMIC_DELEGATE宏进行声明",
      "direction": "unidirectional",
      "confidence": 0.9
    },
    {
      "subject": "动态组播委托",
      "predicate": "使用",
      "object": "DECLARE_DYNAMIC_MULTICAST_DELEGATE宏",
      "context": "动态组播委托使用DECLARE_DYNAMIC_MULTICAST_DELEGATE宏进行声明",
      "direction": "unidirectional",
      "confidence": 0.9
    },
    {
      "subject": "动态委托",
      "predicate": "绑定方法",
      "object": "BindDynamic宏",
      "context": "动态委托使用BindDynamic宏进行绑定",
      "direction": "unidirectional",
      "confidence": 0.9
    },
    {
      "subject": "动态组播委托",
      "predicate": "绑定方法",
      "object": "AddDynamic宏",
      "context": "动态组播委托使用AddDynamic宏进行绑定",
      "direction": "unidirectional",
      "confidence": 0.9
    },
    {
      "subject": "动态组播委托",
      "predicate": "解绑方法",
      "object": "RemoveDynamic宏",
      "context": "动态组播委托使用RemoveDynamic宏进行解绑",
      "direction": "unidirectional",
      "confidence": 0.9
    },
    {
      "subject": "动态委托",
      "predicate": "执行方法",
      "object": "Execute函数",
      "context": "动态委托通过调用Execute函数执行绑定到委托的函数",
      "direction": "unidirectional",
      "confidence": 0.9
    },
    {
      "subject": "动态委托",
      "predicate": "安全执行方法",
      "object": "ExecuteIfBound函数",
      "context": "动态委托可通过ExecuteIfBound函数安全执行，该函数会检查委托是否已绑定",
      "direction": "unidirectional",
      "confidence": 0.9
    },
    {
      "subject": "动态委托",
      "predicate": "检查方法",
      "object": "IsBound函数",
      "context": "动态委托可通过IsBound函数检查是否已绑定，确保安全执行",
      "direction": "unidirectional",
      "confidence": 0.9
    },
    {
      "subject": "动态委托",
      "predicate": "相关概念",
      "object": "多播委托",
      "context": "动态委托与多播委托相关，多播委托是动态委托的多播版本",
      "direction": "bidirectional",
      "confidence": 0.8
    },
    {
      "subject": "动态委托",
      "predicate": "相关概念",
      "object": "Lambda函数",
      "context": "动态委托与Lambda函数相关，都是Unreal Engine中处理函数回调的机制",
      "direction": "bidirectional",
      "confidence": 0.7
    }
  ],
  "timestamp": "2025-06-15T18:54:33.680Z",
  "warnings": [],
  "metadata": {
    "fileSize": 3106,
    "contentLength": 2088,
    "processingTimeMs": 62397
  }
}